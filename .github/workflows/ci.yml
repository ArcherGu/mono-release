name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  test:
    if: '!contains(github.event.head_commit.message, ''skip-ci'')'

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        node-version: [18.x, 20.x]

    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache pnpm store
        uses: actions/cache@v4
        env:
          cache-name: cache-pnpm-store
        with:
          path: ${{ github.workspace }}/.pnpm-store
          key: ${{ runner.os }}-${{ matrix.node-version }}-test-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-test-
            ${{ runner.os }}-

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Set pnpm store path
        run: pnpm config set store-dir .pnpm-store

      - name: Install deps
        run: pnpm i

      # Runs a set of commands using the runners shell
      - name: Build and Test
        run: pnpm build && pnpm test

  release:
    if: '!contains(github.event.head_commit.message, ''skip-release'') && !contains(github.event.head_commit.message, ''skip-ci'') && github.event_name != ''pull_request'''

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [20.x]

    runs-on: ${{ matrix.os }}
    needs: [test]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache pnpm store
        uses: actions/cache@v4
        env:
          cache-name: cache-pnpm-store
        with:
          path: ${{ github.workspace }}/.pnpm-store
          key: ${{ runner.os }}-${{ matrix.node-version }}-release-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-release-${{ env.cache-name }}-
            ${{ runner.os }}-${{ matrix.node-version }}-release-
            ${{ runner.os }}-
      - run: npm i -g pnpm
      - run: pnpm config set store-dir .pnpm-store
      - run: pnpm i
      - run: pnpx semantic-release --branches main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
